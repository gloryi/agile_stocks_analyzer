import numpy as np
import tensorflow as tf
from tensorflow import keras
import numpy as np

model = keras.models.load_model("neuralPBRose.hdf5")


test_features01 = [
    [
        1.0,
        -0.6666666666667272,
        -0.3333333333332727,
        1.3333333333333333,
        -1.6666666666666667,
        0.6666666666666666,
        1.3333333333333333,
        0.3333333333332727,
        1.0,
        0.6666666666666666,
        0.3333333333334546,
        0.3333333333333333,
        0.0,
        1.6666666666666667,
        1.6666666666666667,
        1.3770058683997832,
        0.7272296245360942,
        0.6312543236644989,
        0.6952300016220241,
        1.5692801817775996,
        0.6666666666667272,
        23.99999999999988,
        50.66666666666673,
    ]
]
test_features00 = [
    [
        -1.3636363636363635,
        0.9090909090909091,
        0.6818181818181818,
        -0.45454545454545453,
        -1.5909090909090908,
        1.1363636363636365,
        0.0,
        0.45454545454545453,
        0.0,
        1.1363636363636365,
        0.22727272727272727,
        0.22727272727272727,
        0.6818181818181818,
        0.22727272727272727,
        0.0,
        1.523734287361019,
        0.8307459474987868,
        0.919606777536576,
        0.7821380503498563,
        0.943774937253762,
        -0.22727272727276862,
        14.318181818181777,
        36.59090909090909,
    ]
]
test_features11 = [
    [
        0.0,
        -0.41666666666667296,
        2.083333333333365,
        -0.41666666666667296,
        -2.083333333333289,
        0.8333333333332701,
        0.41666666666667296,
        0.8333333333334217,
        0.41666666666667296,
        0.0,
        0.41666666666667296,
        0.41666666666667296,
        0.41666666666667296,
        0.41666666666682456,
        0.41666666666667296,
        0.7799693860426797,
        0.9089020053893673,
        1.1936170821888885,
        0.7913107139621606,
        1.3262008124169034,
        -0.41666666666667296,
        33.75000000000043,
        59.58333333333423,
    ]
]
test_features10 = [
    [
        -0.6060606060606094,
        -0.6060606060606094,
        -1.666666666666676,
        1.5151515151515236,
        0.6060606060605819,
        0.1515151515151799,
        0.15151515151515235,
        0.0,
        0.3030303030303047,
        0.3030303030303047,
        0.15151515151515235,
        0.0,
        0.0,
        0.15151515151515235,
        0.1515151515151799,
        0.5395013896146298,
        0.4782563941557818,
        1.9136485877963019,
        1.3911014056321094,
        0.6774922228011772,
        -0.6060606060606094,
        8.030303030303047,
        25.909090909091056,
    ]
]

# model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

print("BULLISH SAMPLES")
result = model.predict(test_features01)
print(result[0][0])
result = model.predict(test_features11)
print(result[0][0])
print("BEARISH_SAMPLES")
result = model.predict(test_features00)
print(result[0][0])
result = model.predict(test_features10)
print(result[0][0])

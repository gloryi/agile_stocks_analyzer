import subprocess
***REMOVED***
***REMOVED***
import signal
***REMOVED***
***REMOVED***

TRN1 = 100
TRN2 = 200
SILENT = True



#***REMOVED***
    #with open("capital_asset_urls.csv", "r") as assetsFile:
        #datareader = csv.reader(assetsFile)
        #assets = []
        #for line in datareader:
           #assets.append(line[0])
        #return assets


list_of_tokens = readAssets()

project_path = os.getcwd()

casted_processes = []

p = subprocess.Popen(["python3", os.path.join(project_path,"_evaluator_server_plug.py")])
casted_processes.append(p)


def launch_test(TEST_MODE, TRN_MODE, PORT):

    validator = subprocess.Popen(["python3", os.path.join(project_path,"_validator.py"),
                        TEST_MODE, TRN_MODE, PORT])
    casted_processes.append(p)
    time.sleep(2)
    evaluator = subprocess.Popen(["python3", os.path.join(project_path,"evaluatorProcessor.py"),
                        TOKEN_NAME, "V", TEST_MODE,  PORT], stdout = subprocess.DEVNULL)
    casted_processes.append(p)
    time.sleep(2)

    return validator, evaluator





TOKEN_NAME = sys.argv[1]
validators = []
evaluators = []

***REMOVED***
##################  ORCHID TEST CASE
***REMOVED***

validator, evaluator = launch_test("ORCHID", "TRN1", 7777)
validator.append(validator)
evaluators.append(evaluator)
validator, evaluator = launch_test("ORCHID", "TRN2", 7778)
validator.append(validator)
evaluators.append(evaluator)

***REMOVED***
##################  AKMENS TEST CASE
***REMOVED***

validator, evaluator = launch_test("AKMENS", "TRN1", 7779)
validator.append(validator)
evaluators.append(evaluator)
validator, evaluator = launch_test("AKMENS", "TRN2", 7780)
validator.append(validator)
evaluators.append(evaluator)

***REMOVED***
##################  BLAKE TEST CASE
***REMOVED***

validator, evaluator = launch_test("AKMENS", "TRN1", 7781)
validator.append(validator)
evaluators.append(evaluator)
validator, evaluator = launch_test("AKMENS", "TRN2", 7782)
validator.append(validator)
evaluators.append(evaluator)

***REMOVED***
##################  RANDOM TEST CASE
***REMOVED***

validator, evaluator = launch_test("AKMENS", "TRN1", 7783)
validator.append(validator)
evaluators.append(evaluator)
validator, evaluator = launch_test("AKMENS", "TRN2", 7784)
validator.append(validator)
evaluators.append(evaluator)



for validator in validators:
    validator.wait()

for evaluator in evaluators:
    os.killpg(os.getpgid(evaluator.pid), signal.SIGKILL)


